#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

# test "" = "$(grep '^Signed-off-by: ' "$1" |
# 	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
# 	echo >&2 Duplicate Signed-off-by lines.
# 	exit 1
# }
# Get the commit message from the temporary file created by Git
commit_message=$(cat "$1")

# Define the list of allowed emojis
allowed_emojis=("🎉" "🚀" "🐛" "📝" "🚧" "❓" "✅")

# Check that the commit message starts with an allowed emoji
if ! [[ "${allowed_emojis[@]}" =~ "${commit_message:0:1}" ]]; then
    echo "Error: Commit message must start with one of the following emojis: 🎉 🚀 🐛 📝 🚧 ❓ ✅" >&2
    exit 1
fi

# If the check passes, exit with a success code
exit 0
  
